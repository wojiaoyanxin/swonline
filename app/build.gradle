//apply plugin: 'com.android.application'
apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
//apply from: '../MobSDK.gradle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "4g"//越大越好
    }
    defaultConfig {
        //applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        compileOptions.encoding = "UTF-8"
        flavorDimensions "versionCode"
        multiDexEnabled = true
        ndk {
            abiFilters "armeabi-v7a"
        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }
        packagingOptions {
            exclude 'META-INF/proguard/androidx-annotations.pro'
        }
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        debug {
            keyAlias 'yingshiedu'
            keyPassword '123456'
            storeFile file('keystore.jks')
            storePassword '123456'
        }
        release {
            keyAlias 'yingshiedu'
            keyPassword '123456'
            storeFile file('keystore.jks')
            storePassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            //开发环境
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            manifestPlaceholders = [UMENG_APPKEY: "5e0d64a34ca3575830000056"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        tesing {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            manifestPlaceholders = [UMENG_APPKEY: "5e0d64a34ca3575830000056"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        rdtest {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            manifestPlaceholders = [UMENG_APPKEY: "5e0d64a34ca3575830000056"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            //预发环境
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            manifestPlaceholders = [UMENG_APPKEY: "5e0d64c34ca35746a2000346"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    lintOptions {
        abortOnError false
    }
}


greendao {
    schemaVersion 1 // 数据库版本号
    daoPackage 'com.sunlands.intl.yingshi.greendao'//greenDao 自动生成的代码保存的包名
    targetGenDir 'src/main/java' //自动生成的代码存储的路径，默认是 build/generated/source/greendao.
    generateTests false //true的时候自动生成测试单元
}

dependencies {

    api fileTree(include: ['*.jar','*.aar'], dir: 'libs')
    api rootProject.ext.libraries.glide
    api rootProject.ext.libraries.agentweb
    api rootProject.ext.libraries.pdfview
    api rootProject.ext.libraries.walle
    api rootProject.ext.libraries.aligntextview
    api rootProject.ext.libraries.imagezoom
    api rootProject.ext.libraries.greendaoupgrade
    api rootProject.ext.libraries.MPAndroidChart
    api rootProject.ext.libraries.utilcode
    api rootProject.ext.libraries.PickerView
    api rootProject.ext.libraries.CBRatingBar
    api rootProject.ext.libraries.kotlin_stdlib
    api rootProject.ext.libraries.UManalytics
    api rootProject.ext.libraries.UMcommon
    api rootProject.ext.libraries.CBRatingBar
    api rootProject.ext.libraries.support_v4
    api rootProject.ext.libraries.appcompat_v7
    api rootProject.ext.libraries.design
    api rootProject.ext.libraries.glide
    api rootProject.ext.libraries.eventbus
    api rootProject.ext.libraries.immersionbar
    api rootProject.ext.libraries.rxjava
    api rootProject.ext.libraries.rxandroid
    api rootProject.ext.libraries.retrofit
    api rootProject.ext.libraries.MathView
    api rootProject.ext.libraries.junit
    api rootProject.ext.libraries.support_v4
    api rootProject.ext.libraries.appcompat_v7
    api rootProject.ext.libraries.design
    api rootProject.ext.libraries.runner
    api rootProject.ext.libraries.espresso
    api rootProject.ext.libraries.recyclerview_v7
    api rootProject.ext.libraries.constraint_layout
    api rootProject.ext.libraries.cardview
    api rootProject.ext.libraries.vector_drawable
    api rootProject.ext.libraries.preference
    api rootProject.ext.libraries.agentweb
    api rootProject.ext.libraries.eventbus
    api rootProject.ext.libraries.greendao
    api rootProject.ext.libraries.okhttp_logging
    api rootProject.ext.libraries.okhttp
    api rootProject.ext.libraries.disklrucache
    api rootProject.ext.libraries.rxjava
    api rootProject.ext.libraries.rxandroid
    api rootProject.ext.libraries.retrofit
    api rootProject.ext.libraries.converter_gson
    api rootProject.ext.libraries.retrofit2_rxjava
    api rootProject.ext.libraries.glide
    api rootProject.ext.libraries.rxbinding
    api rootProject.ext.libraries.SmartRefreshLayout
    api rootProject.ext.libraries.immersionbar
    api rootProject.ext.libraries.utilcode
    api rootProject.ext.libraries.UManalytics
    api rootProject.ext.libraries.UMcommon
    api rootProject.ext.libraries.MathView
    api(rootProject.ext.libraries.permission) {
        exclude group: 'com.android.support'
    }

    implementation(name: 'LiteAVSDK_Player', ext: 'aar')
    api('com.arialyy.aria:aria-core:3.6.3') {
        exclude group: 'com.android.support'
    }
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.5.3'
    api 'com.tencent.imsdk:imsdk:4.3.135'
    annotationProcessor 'com.arialyy.aria:aria-compiler:3.6.3'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'com.czt.mp3recorder:library:1.0.4'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    implementation 'com.github.zrunker:ZTextView:v1.0.2'
    implementation('com.sunlands.app:sunlands_live_sdk:1.1.3') {
        //如果已经引入okhttp3、gson或ijkplayer，则做如下配置：
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        exclude group: 'com.google.code.gson', module: 'gson'
    }
}

