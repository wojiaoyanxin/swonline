package com.sunlands.intl.yingshi.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sunlands.intl.yingshi.greendao.db.HandoutDbBean;
import com.sunlands.intl.yingshi.greendao.db.SubjectDbBean;
import com.sunlands.intl.yingshi.greendao.db.MyDownLoadInfo;
import com.sunlands.intl.yingshi.greendao.db.LoginInfo;
import com.sunlands.intl.yingshi.greendao.db.MyAllFileDbBean;
import com.sunlands.intl.yingshi.greendao.db.PaperDbBean;

import com.sunlands.intl.yingshi.greendao.HandoutDbBeanDao;
import com.sunlands.intl.yingshi.greendao.SubjectDbBeanDao;
import com.sunlands.intl.yingshi.greendao.MyDownLoadInfoDao;
import com.sunlands.intl.yingshi.greendao.LoginInfoDao;
import com.sunlands.intl.yingshi.greendao.MyAllFileDbBeanDao;
import com.sunlands.intl.yingshi.greendao.PaperDbBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig handoutDbBeanDaoConfig;
    private final DaoConfig subjectDbBeanDaoConfig;
    private final DaoConfig myDownLoadInfoDaoConfig;
    private final DaoConfig loginInfoDaoConfig;
    private final DaoConfig myAllFileDbBeanDaoConfig;
    private final DaoConfig paperDbBeanDaoConfig;

    private final HandoutDbBeanDao handoutDbBeanDao;
    private final SubjectDbBeanDao subjectDbBeanDao;
    private final MyDownLoadInfoDao myDownLoadInfoDao;
    private final LoginInfoDao loginInfoDao;
    private final MyAllFileDbBeanDao myAllFileDbBeanDao;
    private final PaperDbBeanDao paperDbBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        handoutDbBeanDaoConfig = daoConfigMap.get(HandoutDbBeanDao.class).clone();
        handoutDbBeanDaoConfig.initIdentityScope(type);

        subjectDbBeanDaoConfig = daoConfigMap.get(SubjectDbBeanDao.class).clone();
        subjectDbBeanDaoConfig.initIdentityScope(type);

        myDownLoadInfoDaoConfig = daoConfigMap.get(MyDownLoadInfoDao.class).clone();
        myDownLoadInfoDaoConfig.initIdentityScope(type);

        loginInfoDaoConfig = daoConfigMap.get(LoginInfoDao.class).clone();
        loginInfoDaoConfig.initIdentityScope(type);

        myAllFileDbBeanDaoConfig = daoConfigMap.get(MyAllFileDbBeanDao.class).clone();
        myAllFileDbBeanDaoConfig.initIdentityScope(type);

        paperDbBeanDaoConfig = daoConfigMap.get(PaperDbBeanDao.class).clone();
        paperDbBeanDaoConfig.initIdentityScope(type);

        handoutDbBeanDao = new HandoutDbBeanDao(handoutDbBeanDaoConfig, this);
        subjectDbBeanDao = new SubjectDbBeanDao(subjectDbBeanDaoConfig, this);
        myDownLoadInfoDao = new MyDownLoadInfoDao(myDownLoadInfoDaoConfig, this);
        loginInfoDao = new LoginInfoDao(loginInfoDaoConfig, this);
        myAllFileDbBeanDao = new MyAllFileDbBeanDao(myAllFileDbBeanDaoConfig, this);
        paperDbBeanDao = new PaperDbBeanDao(paperDbBeanDaoConfig, this);

        registerDao(HandoutDbBean.class, handoutDbBeanDao);
        registerDao(SubjectDbBean.class, subjectDbBeanDao);
        registerDao(MyDownLoadInfo.class, myDownLoadInfoDao);
        registerDao(LoginInfo.class, loginInfoDao);
        registerDao(MyAllFileDbBean.class, myAllFileDbBeanDao);
        registerDao(PaperDbBean.class, paperDbBeanDao);
    }
    
    public void clear() {
        handoutDbBeanDaoConfig.clearIdentityScope();
        subjectDbBeanDaoConfig.clearIdentityScope();
        myDownLoadInfoDaoConfig.clearIdentityScope();
        loginInfoDaoConfig.clearIdentityScope();
        myAllFileDbBeanDaoConfig.clearIdentityScope();
        paperDbBeanDaoConfig.clearIdentityScope();
    }

    public HandoutDbBeanDao getHandoutDbBeanDao() {
        return handoutDbBeanDao;
    }

    public SubjectDbBeanDao getSubjectDbBeanDao() {
        return subjectDbBeanDao;
    }

    public MyDownLoadInfoDao getMyDownLoadInfoDao() {
        return myDownLoadInfoDao;
    }

    public LoginInfoDao getLoginInfoDao() {
        return loginInfoDao;
    }

    public MyAllFileDbBeanDao getMyAllFileDbBeanDao() {
        return myAllFileDbBeanDao;
    }

    public PaperDbBeanDao getPaperDbBeanDao() {
        return paperDbBeanDao;
    }

}
